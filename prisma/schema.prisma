generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "extendedWhereUnique"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Document {
  id        String    @id @default(cuid())
  title     String
  content   Json
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  versions  Version[]

  @@index([createdAt])
  @@index([updatedAt])
  @@index([title])
  @@index([updatedAt, title])
}

model Version {
  id         String   @id @default(cuid())
  content    Json
  createdAt  DateTime @default(now())
  documentId String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id])

  @@index([documentId])
  @@index([userId])
  @@index([createdAt])
  @@index([documentId, createdAt])
}

model User {
  id        String     @id
  name      String?
  documents Document[]
  versions  Version[]
  files     File[]

  @@index([name])
}

enum FileStatus {
  pending
  approved
  rejected
}

model File {
  id         String     @id @default(cuid())
  userId     String
  name       String
  type       String
  size       Int
  url        String
  key        String
  status     FileStatus @default(pending)
  uploadedAt DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  metadata   Json
  user       User       @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([status])
  @@index([uploadedAt])
  @@index([type])
  @@index([name])
}

